data "azurerm_virtual_network" "vnet" {
  name                = var.azurerm_virtual_network_name
  resource_group_name = var.azurerm_resource_group_name
}

data "azurerm_subnet" "subnet" {
  name                 = var.azurerm_subnet_name
  virtual_network_name = data.azurerm_virtual_network.vnet.name
  resource_group_name  = var.azurerm_resource_group_name
}

module "optimized-mssql-managed-instance" {
  mi_name                      = "terraformtstexample2"
  source                       = "intel/azure-mssql-managed-instance/intel"
  azurerm_subnet_name          = "<ENTER_SUBNET_NAME>" # Replace with actual subnet name
  nsg_name                     = "<ENTER_NETWORK_SECURITY_GROUP_NAME>" # Replace with actual NSG name
  azurerm_virtual_network_name = "<ENTER VIRTUAL NETWORK>" # Replace with actual VNet name
  azurerm_resource_group_name  = "<ENTER RESOURCE GROUP NAME>" # Replace with actual RG name
  administrator_login_password = var.administrator_login_password
  administrator_login          = "sqladmin"
  license_type                 = "BasePrice"
  vcore_count                  = 4
  sku_name                     = "GP_Gen8IH"
  storage_size_in_gb           = 32
  tags = {
    owner    = "owner@company.com"
    duration = "4"
  }
}

resource "azurerm_storage_account" "example_storage_account" {
  name                     = "accteststoract10101"
  resource_group_name      = "<ENTER RESOURCE GROUP NAME>" # Replace with actual RG name
  location                 = "eastus2"
  account_tier             = "Standard"
  account_replication_type = "GRS"
  
  # OPTIONAL SECTION: Settings to comply with the policy - check with your organization's requirements
  allow_nested_items_to_be_public = false
  public_network_access_enabled   = false
  min_tls_version                 = "TLS1_2"
  
  # OPTIONAL SECTION: Enable a private endpoint for secure access - check with your organization's requirements
  network_rules {
    default_action = "Deny"
    bypass         = ["AzureServices"]
  }
}

resource "azurerm_storage_container" "example_container" {
  name                  = "accteststorcont101"
  storage_account_name  = azurerm_storage_account.example_storage_account.name
  container_access_type = "private"
}

resource "azurerm_mssql_managed_instance_security_alert_policy" "example_alert_policy" {
  resource_group_name        = "<ENTER RESOURCE GROUP NAME>" # Replace with actual RG name
  managed_instance_name      = module.optimized-mssql-managed-instance.vm_name
  enabled                    = true
  storage_endpoint           = azurerm_storage_account.example_storage_account.primary_blob_endpoint
  storage_account_access_key = azurerm_storage_account.example_storage_account.primary_access_key
  retention_days             = 30
}

resource "azurerm_mssql_managed_instance_vulnerability_assessment" "example_assessment" {
  managed_instance_id        = module.optimized-mssql-managed-instance.managed_instance_id
  storage_container_path     = "${azurerm_storage_account.example_storage_account.primary_blob_endpoint}${azurerm_storage_container.example_container.name}/"
  storage_account_access_key = azurerm_storage_account.example_storage_account.primary_access_key

  recurring_scans {
    enabled                   = true
    email_subscription_admins = true
    emails = [
      "user@company.com"
    ]
  }
  depends_on = [azurerm_mssql_managed_instance_security_alert_policy.example_alert_policy]
}